#!/usr/bin/env bash


topics=$(jq -r .meta.topics /config/openstack/latest/meta_data.json)
project_topics=$(grep -v '^[[:space:]]*#' ${config_dir}/puppet/topics | sort -u)

if [ "$topics" = "null" ]; then # jq(1) always returns 0, so we need to parse its output.
  topics="base firewall"
fi

cat > /etc/puppet/hiera.yaml <<EOF
---
:backends:
  - "yaml"
:logger: puppet
:yaml:
  :datadir: /etc/puppet/hieradata
  :puppet:
    :datasource: data

:hierarchy:
  - "override"
  - "$(basename $repos_bootstrap | sed 's/\.yaml$//')"
EOF

# Add extra overrides specified through Heat.

if [ -n "$extra_overrides" ]; then
  for entry in $extra_overrides
  do
    echo "  - $entry" | sed 's/\.yaml$//' >> /etc/puppet/hiera.yaml
  done
fi

echo "  - $(basename $repos_bootstrap | sed 's/\.yaml$//')" >> /etc/puppet/hiera.yaml

# Generate hierarchy entries for additional_config

setup_additional_config clone
setup_additional_config gen_hiera >> /etc/puppet/hiera.yaml
setup_additional_config gen_repodeploy >> "$repos_bootstrap"

# Deploy topic configuration from project repository (if applicable).

if [ -d "$config_dir" ]; then

  # Only add these entries on the puppet master or machines with a masterless
  # puppet setup, since they cause the puppetmaster side configuration to be
  # deployed during bootstrapping.

  if echo "${topics}" | grep -w -e puppet-masterless -e puppet-master; then
    # Node and node type specific classes overrides from project configuration.
    echo "  - \"project-config/nodes.d/%{::fqdn}\"" >> /etc/puppet/hiera.yaml
    echo "  - \"project-config/nodetypes.d/%{::nodetype}\"" >> /etc/puppet/hiera.yaml
  fi

  # Hierarchy entries from project-config...

  gen_hierarchy --dir ${config_dir} \
                --all-topics \
                --include config.d --include repos.d \
                --prefix 'project-config' \
                >> /etc/puppet/hiera.yaml

    # ...and for global-config topics requested in project-config.

  if [ -n "$project_topics" ]; then # Only makes sense if project topics have been defined.

    gen_hierarchy --dir ${global_config_dir} \
                  --include config.d --include repos.d \
                  --prefix 'global-config' ${project_topics} \
                  >> /etc/puppet/hiera.yaml
  fi

  # Symlink configuration directories for project specific configurations.

  ln -sf ${config_dir}/puppet/hieradata /etc/puppet/hieradata/project-config
  ln -sf ${global_config_dir}/puppet/hieradata /etc/puppet/hieradata/global-config

fi

# Deploy bootstrap topic configurations

gen_hierarchy --dir ${global_config_dir} \
              --include classes.d --include config.d --include repos.d \
              --prefix '%{::fqdn}/global-config' ${topics} \
              >> /etc/puppet/hiera.yaml

# Add global.yaml

echo '  - "global-config/global"' >> /etc/puppet/hiera.yaml

mkdir -p /etc/puppet/hieradata/$(facter -p fqdn)  # Keeps puppetmaster's bootstrap classes from being declared on agents.
ln -s ${global_config_dir}/puppet/hieradata /etc/puppet/hieradata/$(facter -p fqdn)/global-config

