#!/usr/bin/env bash

set -x

sys11_topics=$(jq -r .meta.sys11_topics /config/openstack/latest/meta_data.json)
project_topics=$(grep -v '^[[:space:]]*#' ${config_dir}/puppet/sys11-topics | sort -u)
project_classes=$(jq -r .meta.project_classes /config/openstack/latest/meta_data.json)

if [ "$sys11_topics" = "null" ]; then # jq(1) always returns 0, so we need to parse its output.
  sys11_topics="base firewall"
fi

mkdir /etc/puppet/hieradata

cat > /etc/puppet/hiera.yaml <<EOF
---
:backends:
  - yaml
:logger: puppet
:yaml:
  :datadir: /etc/puppet/hieradata
  :puppet:
    :datasource: data

:hierarchy:
  - override
EOF





# Deploy topic configuration from project repository (if applicable).

if [ -d "$config_dir" ]; then

  # Only add these entries if explicitely asked for, since they cause the puppetmaster side
  # configuration to be deployed during bootstrapping.

  if [ "$project_classes" = 'true' ]; then
    # Node and node type specific classes overrides from project configuration.
    echo "  - \"project-config/nodes.d/%{::fqdn}\"" >> /etc/puppet/hiera.yaml
    echo "  - \"project-config/nodetypes.d/%{::nodetype}\"" >> /etc/puppet/hiera.yaml
  fi

  # Generate hierarchy entries for project specific configuration...

  gen_hierarchy --dir ${config_dir} \
                --all-topics \
                --include config.d --include repos.d \
                --prefix 'project-config' \
                >> /etc/puppet/hiera.yaml

  if [ -n "$project_topics" ]; then # Only makes sense if project topics have been defined.
    # ...and for sys11 default configuration.

    gen_hierarchy --dir ${sys11_config_dir} \
                  --include config.d --include repos.d \
                  --prefix 'sys11-config' ${project_topics} \
                  >> /etc/puppet/hiera.yaml
  fi

  # Symlink configuration directories for project specific configurations.

  ln -s ${config_dir}/puppet/hieradata /etc/puppet/hieradata/project-config
  ln -s ${sys11_config_dir}/puppet/hieradata /etc/puppet/hieradata/sys11-config

fi


# Deploy bootstrap topic configurations

gen_hierarchy --dir ${sys11_config_dir} \
              --include classes.d --include config.d --include repos.d \
              --prefix '%{::fqdn}/sys11-defaults' ${sys11_topics} \
              >> /etc/puppet/hiera.yaml

mkdir -p /etc/puppet/hieradata/$(facter -p fqdn)  # Keeps puppetmaster's bootstrap classes from being declared on agents.
ln -s ${sys11_config_dir}/puppet/hieradata /etc/puppet/hieradata/$(facter -p fqdn)/sys11-defaults

ln -sf /etc/puppet/hiera.yaml /etc/hiera.yaml

cp /opt/override.yaml /etc/puppet/hieradata/override.yaml

programs=(bin/run_puppet_hiera bin/really_run_puppet_agent bin/run_repodeploy bin/facter_to_hiera bin/show_pm_repos bin/hiera_dump)
for program in "${programs[@]}"; do
    ln -s ${scripts_dir}/${program} /usr/local/sbin
done

cat > /etc/puppet/manifests/site.pp <<'EOF'
# Gets rid of
#  Warning: The package type's allow_virtual parameter will be changing its default value from false to true in a future release. If you do not want to allow virtual packages, please explicitly set allow_virtual to false.
#   (at /usr/lib/ruby/site_ruby/1.8/puppet/type.rb:816:in `set_default')

Package{
  allow_virtual => true,
}

stage { 'last': }
stage { 'first': }
Stage['first'] -> Stage['main']
Stage['main'] -> Stage['last']

hiera_include('classes')
EOF

run_repodeploy  # Deploy configured repositories (if any)

rm -rf /etc/puppet/modules   # No longer needed now (run_puppet_hiera doesn't include this in its module path.)
